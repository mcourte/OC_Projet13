version: 2.1

orbs:
  python: circleci/python@2.0.3
  docker: circleci/docker@2.1.3

jobs:
  build-and-test:
    docker:
      - image: python:3.10-slim  # Image légère pour les tests
    steps:
      - checkout
      - run:
          name: Clear pip cache
          command: pip cache purge
      - run:
          name: Installer les dépendances
          command: |
            python -m venv venv  # Crée un environnement virtuel Python
            . venv/bin/activate
            pip install -r requirements.txt
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            python -m pytest
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  build_docker_image:
    docker:
      - image: circleci/python:3.10
    resource_class: large  # Utilise plus de ressources pour les builds Docker
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true  # Supprime la version, CircleCI utilisera la version compatible
      - run:
          name: Build Docker image
          command: docker build -t $DOCKERHUB_USERNAME/my-app:latest .
      - run:
          name: Push Docker image
          command: |
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker push $DOCKERHUB_USERNAME/my-app:latest

  deploy:
    machine:
      resource_class: large  # Assure des ressources suffisantes pour le déploiement
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Deploy to Render
          command: |
            if [ -z "$HOOK_RENDER" ]; then
              echo "Error: HOOK_RENDER is not set"
              exit 1
            fi
            curl -X POST "$HOOK_RENDER" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{\"image\": \"docker.io/$DOCKERHUB_USERNAME/my-app:latest\", \"clearCache\": false}"

workflows:
  build-and-deploy-workflow:
    jobs:
      - build-and-test
      - build_docker_image:
          requires:
            - build-and-test
      - deploy:
          requires:
            - build_docker_image
          filters:
            branches:
              only: main
